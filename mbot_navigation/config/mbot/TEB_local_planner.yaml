TebLocalPlannerROS:
  odom_topic: odom
  map_frame: map

  # Trajectory
  teb_autosize: True
  dt_ref: 0.45    #0~0.3~1.0#局部路径规划的解析度; 
  dt_hysteresis: 0.1    #0.002~0.1~0.5#允许改变的时域解析度的浮动范围， 一般为 dt_ref 的 10% 左右;
  min_samples: 3
  global_plan_overwrite_orientation: True #覆盖全局路径中局部路径点的朝向，
  global_plan_viapoint_sep: 0.3 #-0.1~-0.1~5.0# 从全局计划中提取的每两个连续通过点之间的最小间隔[如果为负：禁用]，
  max_global_plan_lookahead_dist: 1.5 #0~3~50#考虑优化的全局计划子集的最大长度（累积欧几里得距离）（如果为0或负数：禁用；长度也受本地Costmap大小的限制）
  global_plan_prune_distance: 0.6
  force_reinit_new_goal_dist: 1.0   #0~1.0~10#如果上一个目标的间隔超过指定的米数（跳过热启动），则强制规划器重新初始化轨
  feasibility_check_no_poses: 3 #0~5~50#检测位姿可到达的时间间隔
  publish_feedback: false #发布包含完整轨迹和活动障碍物列表的规划器反馈，
  allow_init_with_backwards_motion: true    #允许在开始时想后退来执行轨迹
  exact_arc_length: false   #如果为真，规划器在速度、加速度和转弯率计算中使用精确的弧长[->增加的CPU时间]，否则使用欧几里德近似。
  shrink_horizon_backup: true
  shrink_horizon_min_duration: 10

  # Robot
  max_vel_x: 1.0  #最大x前向速度，
  max_vel_x_backwards: 0.5  #最大x后退速度
  max_vel_theta: 3.14   #最大转向叫速度
  max_vel_y: 0.2
  acc_lim_y: 0.5  #最大x加速度
  acc_lim_x: 0.5
  acc_lim_theta: 1.57   #最大角速度
  min_turning_radius: 0.0   #min_turning_radius
  wheelbase: 0.0  #-10~1.0~10#驱动轴和转向轴之间的距离（仅适用于启用了“Cmd_angle_而不是_rotvel”的Carlike机器人）；对于后轮式机器人，该值可能为负值！
  cmd_angle_instead_rotvel: false # not used, is differential#将收到的角速度消息转换为 操作上的角度变化。
  footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
#    type: "circular"
#    radius: 0.5 # for type "circular"
#    type: "line"
#    line_start: [-0.0545, 0.0] # for type "line"
#    line_end: [0.0545, 0.0] # for type "line"
    #front_offset: 0.2 # for type "two_circles"
    #front_radius: 0.2 # for type "two_circles"
    #rear_offset: 0.2 # for type "two_circles"
    #rear_radius: 0.2 # for type "two_circles"
    type: "polygon" ##多边形类型for mec，默认“point“
    vertices: [ [0.4, -0.25], [0.5, 0.0], [0.4, 0.25], [-0.4, 0.25], [-0.4, -0.25] ] # for type "polygon"

  # GoalTolerance
  xy_goal_tolerance: 0.1  #0.001~0.1~3.2#目标 xy 偏移容忍度
  yaw_goal_tolerance: 0.05  #0.001~0.1~3.2目标 角度 偏移容忍度，
  free_goal_vel: False  #允许机器人以最大速度驶向目的地，

  # Obstacles
  min_obstacle_dist: 0.05 #0~0.5~15# 和障碍物最小距离，
  inflation_dist: 0.0 #0~0.6~15# 障碍物膨胀距离
  include_costmap_obstacles: True # costmap 中的障碍物是否被直接考虑，
  costmap_obstacles_behind_robot_dist: 1.0 #0~1.5~20 限制在机器人后面进行规划时考虑的占用的本地成本地图障碍（以米为单位指定距离）
  legacy_obstacle_association: false  #是否严格遵循局部规划出来的路径
  obstacle_poses_affected: 30 # unused if legacy_obstacle_association is false
  obstacle_association_force_inclusion_factor: 10.0 #0~1.5~100# the obstacles that will be taken into account are those closer than min_obstacle_dist*factor, if legacy is false
  obstacle_association_cutoff_factor: 40.0 # the obstacles that are further than min_obstacle_dist * factor will not be taken into account, if legacy is false
#  costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSMCCH"
  #costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSRANSAC"
  #costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSMCCH"
#  costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSConcaveHull"
  costmap_converter_plugin: "" # deactivate plugin
  costmap_converter_spin_thread: True
  costmap_converter_rate: 10

  # Optimization
  no_inner_iterations: 5  #被外循环调用后内循环执行优化次数
  no_outer_iterations: 4  #被外循环调用后内循环执行优化次数
  optimization_activate: True # 激活优化，
  optimization_verbose: False #打印优化过程详情
  penalty_epsilon: 0.1  #对于硬约束近似，在惩罚函数中添加安全范围，
  weight_max_vel_x: 2 #最大x速度权重
  weight_max_vel_y: 1
  weight_max_vel_theta: 1 #最大角速度权重
  weight_acc_lim_x: 1 #最大x 加速度权重
  weight_acc_lim_y: 1
  weight_acc_lim_theta: 1   #最大角加速度权重，
  weight_kinematics_nh: 1 # 满足非完整运动学的优化权重
  weight_kinematics_forward_drive: 10 # 优化过程中，迫使机器人只选择前进方向，差速轮适用，
  weight_kinematics_turning_radius: 0 # 优化过程中，车型机器人的最小转弯半径的权重。
  weight_optimaltime: 1.0 # 优化过程中，基于轨迹的时间上的权重，
  weight_obstacle: 50.0 # 优化过程中，和障碍物最小距离的权重，
  weight_inflation: 0.1 # 优化过程中， 膨胀区的权重，
  weight_viapoint: 1.0 # 优化过程中，和全局路径采样点距离的权重，

  # Homotopy Class Planner
  enable_homotopy_class_planning: False # 允许多线程并行处理，
